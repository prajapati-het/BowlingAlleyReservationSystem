// <auto-generated />
using System;
using BowlingAlley.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BowlingAlley.Migrations
{
    [DbContext(typeof(BowlingAlleyDBContext))]
    [Migration("20240919163143_RejectedSlots")]
    partial class RejectedSlots
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BowlingAlley.Models.BookingSlots", b =>
                {
                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlotId"));

                    b.Property<TimeSpan>("SlotEndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("SlotStartTime")
                        .HasColumnType("time");

                    b.HasKey("SlotId");

                    b.ToTable("BookingSlots");
                });

            modelBuilder.Entity("BowlingAlley.Models.RejectedSlots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmpName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedOn")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("SlotEndTime")
                        .HasColumnType("time");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("SlotStartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("RejectedSlots");
                });

            modelBuilder.Entity("BowlingAlley.Models.ReservationRejections", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "EmpId");

                    b.HasIndex("EmpId");

                    b.ToTable("ReservationRejections");
                });

            modelBuilder.Entity("BowlingAlley.Models.Reservations", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("SlotId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("ReservationId");

                    b.HasIndex("ReservedBy");

                    b.HasIndex("SlotId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("BowlingAlley.Models.Roles", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("1478523690");

                    b.Property<bool>("RoleType")
                        .HasColumnType("bit");

                    b.HasKey("EmpId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BowlingAlley.Models.ReservationRejections", b =>
                {
                    b.HasOne("BowlingAlley.Models.Roles", "Role")
                        .WithMany("ReservationRejections")
                        .HasForeignKey("EmpId")
                        .IsRequired()
                        .HasConstraintName("FK_ReservationRejections_Roles");

                    b.HasOne("BowlingAlley.Models.Reservations", "Reservation")
                        .WithMany("ReservationRejections")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK_ReservationRejections_Reservations");

                    b.Navigation("Reservation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BowlingAlley.Models.Reservations", b =>
                {
                    b.HasOne("BowlingAlley.Models.Roles", "Role")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_Roles");

                    b.HasOne("BowlingAlley.Models.BookingSlots", "Slot")
                        .WithMany("Reservations")
                        .HasForeignKey("SlotId")
                        .IsRequired()
                        .HasConstraintName("FK_Reservations_BookingSlots");

                    b.Navigation("Role");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("BowlingAlley.Models.BookingSlots", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BowlingAlley.Models.Reservations", b =>
                {
                    b.Navigation("ReservationRejections");
                });

            modelBuilder.Entity("BowlingAlley.Models.Roles", b =>
                {
                    b.Navigation("ReservationRejections");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
